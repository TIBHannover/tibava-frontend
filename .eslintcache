[{"/home/ghauri/Documents/any_desk_share/tibava/frontend/src/index.js":"1","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/reportWebVitals.js":"2","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/App.js":"3","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/header.jsx":"4","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/analysisViewer.jsx":"5","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/rectangle.jsx":"6","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/faceAnalysisGraph.jsx":"7","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/annotationList.jsx":"8","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/metadata.jsx":"9","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/shotBoundaryViewer.jsx":"10","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/annotationForm.jsx":"11","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/mediaPlayer.jsx":"12","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/popup.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1042,"mtime":1617038160000,"results":"17","hashOfConfig":"15"},{"size":2129,"mtime":1618449687322,"results":"18","hashOfConfig":"15"},{"size":211343,"mtime":1618479873034,"results":"19","hashOfConfig":"15"},{"size":2558,"mtime":1616668183000,"results":"20","hashOfConfig":"15"},{"size":2888,"mtime":1618450226947,"results":"21","hashOfConfig":"15"},{"size":3624,"mtime":1617795766000,"results":"22","hashOfConfig":"15"},{"size":1824,"mtime":1618480290159,"results":"23","hashOfConfig":"15"},{"size":3488,"mtime":1618480672149,"results":"24","hashOfConfig":"15"},{"size":4152,"mtime":1617818874000,"results":"25","hashOfConfig":"15"},{"size":2658,"mtime":1618453183977,"results":"26","hashOfConfig":"15"},{"size":1130,"mtime":1618480279823,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"m8g45r",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ghauri/Documents/any_desk_share/tibava/frontend/src/index.js",[],["59","60"],"/home/ghauri/Documents/any_desk_share/tibava/frontend/src/reportWebVitals.js",[],"/home/ghauri/Documents/any_desk_share/tibava/frontend/src/App.js",["61"],"import logo from './logo.svg';\nimport './App.css';\n//import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css');\nimport AnalysisViewer from \"./components/analysisViewer\";\nimport Header from \"./components/header\";\n\nfunction App() {\n  return (\n   <div className=\"\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"/>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n      <div className=\"header\">\n        <Header/>\n      </div>\n      <div>\n        <AnalysisViewer/>\n      </div>\n      <div className=\"footer\">\n        <p>Footer Notes</p>\n      </div>\n   </div>\n  );\n}\n\nexport default App;\n","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/header.jsx",[],"/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/analysisViewer.jsx",["62","63","64","65","66","67","68","69"],"/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/rectangle.jsx",["70"],"import React, { Component } from \"react\";\r\nimport ResizableRect from 'react-resizable-rotatable-draggable'\r\n\r\nclass Rectangle extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          getCurrentFaceBboxesArray: props.getCurrentFaceBboxesArray,\r\n          getFrameIdx: props.getFrameIdx,\r\n          getVideoFrameRatio: props.getVideoFrameRatio,\r\n          xShift:window.innerWidth-430, //375 550 430 230 window.innerWidth*0.3879  550\r\n          yShift:220, //-200 100 220 220 window.innerHeight*0.2270 220 (-1*window.innerHeight)+1189\r\n          xScale:0.8, //375 550 1.0\r\n          yScale:0.8, //-200 100 1.0 //+(1.0-props.getVideoFrameRatio()[1]-0.25)\r\n          xMulti:props.getVideoFrameRatio()[0] , //375 0.7 1.0  0.9\r\n          yMulti:props.getVideoFrameRatio()[1], //-200 0.7 1.0   0.9\r\n          windowHeight:window.innerHeight,\r\n          windowWidth:window.innerWidth\r\n        };\r\n      }\r\n    errorHandler = ({ error }) => this.setState({ error });\r\n    onChangeCallback = (selectedInterval) => this.setState({ selectedInterval });\r\n    getDisableEnableFlag = () => {\r\n        console.log(\"height: \"+window.innerHeight);\r\n        console.log(\"width: \"+window.innerWidth);\r\n        this.setState({xShift:window.innerWidth-430});\r\n        //this.setState({yShift:(-1*window.innerHeight)+1189});\r\n    };\r\n    render() {\r\n        window.addEventListener('resize', this.getDisableEnableFlag);\r\n        const ResizableRectList = [];\r\n        if(this.state.getCurrentFaceBboxesArray()){\r\n            console.log(this.state.getCurrentFaceBboxesArray().length);\r\n            console.log(this.state.getFrameIdx());\r\n            var frmIdx = this.state.getFrameIdx();\r\n            var currentBboxxywh = this.state.getCurrentFaceBboxesArray();\r\n            for (var i = 0; i < currentBboxxywh.length; i++) {\r\n                ResizableRectList.push(<ResizableRect\r\n                          top={this.state.yMulti*this.state.getVideoFrameRatio()[1]*(this.state.yShift+currentBboxxywh[i][1])}\r\n                          left={this.state.xMulti*this.state.getVideoFrameRatio()[0]*(this.state.xShift+currentBboxxywh[i][0])}\r\n                          width={currentBboxxywh[i][2]*this.state.xScale}\r\n                          height={currentBboxxywh[i][3]*this.state.yScale}\r\n                          zoomable='n, w, s, e, nw, ne, se, sw' />)\r\n              };\r\n\r\n        }\r\n        return (\r\n            <div>\r\n                {ResizableRectList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rectangle;","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/faceAnalysisGraph.jsx",["71","72","73","74","75","76","77"],"import FileSaver from \"file-saver\";\r\nimport React from \"react\";\r\nimport { useMeasure } from \"react-use\";\r\nimport {\r\n  CartesianGrid,\r\n  Legend,\r\n  Line,\r\n  LineChart,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis\r\n} from \"recharts\";\r\nimport { getPngData } from \"recharts-to-png\";\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nexport const FaceAnalysisGraph = (args) => {\r\n\r\n  const [containerRef, { width: containerWidth }] = useMeasure();\r\n  // The chart that we want to download the PNG for.\r\n  const [chart, setChart] = React.useState();\r\n\r\n  const handleDownloadPNG = React.useCallback(async () => {\r\n    // Send the chart to getPngData\r\n    const pngData = await getPngData(chart);\r\n    // Use FileSaver to download the PNG\r\n    FileSaver.saveAs(pngData, \"videofaceanalysis.png\");\r\n  }, [chart]);\r\n  const handleDownloadCSV = React.useCallback(async () => {\r\n    console.log(\"chart object: \")\r\n    console.log(chart)\r\n    // Send the chart to getPngData\r\n    const pngData = await getPngData(chart);\r\n    // Use FileSaver to download the PNG\r\n    FileSaver.saveAs(pngData, \"videofaceanalysis.png\");\r\n  }, [chart]);\r\n\r\n  const colorschemes = [\"#C49500\", \"#060606\", \"#0F7800\", \"#AF1F00\", \"#7B7878\", \"#C49500\", \"#588A00\", \"#0F7800\", \"#007245\", \"#008F91\", \"#004091\", \"#040091\", \"#420091\", \"#7F0091\", \"#91004B\", \"#910025\", \"#317A9A\"];\r\n\r\n  var data = args.faceAreaArrForGraph;\r\n  function getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n  function getMultiLineForGraph(data) {\r\n    var multiLineForGraph = '';\r\n    var allKeys = Object.keys(data[0]);\r\n    for (var i = 1; i < allKeys.length; i++) {\r\n      multiLineForGraph = multiLineForGraph + '<Line type=\"monotone\" dataKey=\"' + allKeys[i] + '\" stroke=\"' + colorschemes[i] + '\"/> '\r\n    }\r\n  };\r\n\r\n  var multiLineForGraph = [];\r\n  var allKeys = Object.keys(data[0]);\r\n  for (var i = 1; i < allKeys.length; i++) {\r\n    multiLineForGraph.push(<Line type=\"monotone\" dataKey={allKeys[i]} stroke={colorschemes[i]} />);\r\n  }\r\n  return (\r\n    <>\r\n      <LineChart\r\n        ref={(ref) => setChart(ref)} // Set target element\r\n        data={data}\r\n        height={300}\r\n        width={650}\r\n      >\r\n        <XAxis dataKey=\"frameNum\" />\r\n        <YAxis />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Legend wrapperStyle={{ bottom: -5 }} />\r\n        {multiLineForGraph}\r\n      </LineChart>\r\n      <table width=\"100%\">\r\n        <tr>\r\n          <th className=\"text-align-left\">\r\n          </th>\r\n          <th className=\"text-align-right\">\r\n            <CSVLink className=\"btn-stl bg-cb-bl\" data={data} filename={\"face-detections.csv\"}>Download CSV</CSVLink>\r\n          </th>\r\n        </tr>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FaceAnalysisGraph;\r\n","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/annotationList.jsx",["78","79","80"],"import React, { Component } from \"react\";\r\nimport ph_shot_start from './../media/ph_shot_start.PNG';\r\nimport ph_shot_middle from './../media/ph_shot_middle.PNG';\r\nimport ph_shot_end from './../media/ph_shot_end.PNG';\r\nimport ph_face from './../media/ph_face.PNG';\r\n\r\nclass AnnotationList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.getShotdata = props.getShotdata;\r\n        this.getFacedata = props.getFacedata;\r\n        this.annotationType = props.annotationType;\r\n        this.getMetadata = props.getMetadata;\r\n        this.timeTrim=[3,10];\r\n      }\r\n    render() {\r\n        var shotdata = this.getShotdata();\r\n        var facedata = this.getFacedata();\r\n        var metadata = this.getMetadata();\r\n        var elementsToRender = [];\r\n\r\n        console.log(\"In facedata:\");\r\n        console.log(facedata);\r\n        if(this.annotationType==\"shotDetection\" && shotdata[0]){\r\n            for (var i = 0; i < shotdata.length; i++) {\r\n                elementsToRender.push(<li className=\"annotation\" id={\"shotListElm_\"+i}>\r\n                    <div class=\"container\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                          Shot # {i}\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                          Id: {shotdata[i][\"shot_id\"]}<br/>\r\n                          Time: {shotdata[i][\"start_time\"].slice(this.timeTrim[0], this.timeTrim[1])} - {shotdata[i][\"end_time\"].slice(this.timeTrim[0], this.timeTrim[1])}<br/>\r\n                          Frame Span: {shotdata[i][\"start_frame\"]} - {shotdata[i][\"end_frame\"]}<br/>\r\n                          Duration: {((shotdata[i][\"end_frame\"]-shotdata[i][\"start_frame\"])/metadata[\"fps\"]).toFixed(3)} sec<br/>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                          <img className=\"img-shot-face\" src={ph_shot_start} alt=\"starting\" />\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                          <img className=\"img-shot-face\" src={ph_shot_middle} alt=\"middle\" />\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                          <img className=\"img-shot-face\" src={ph_shot_end} alt=\"ending\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </li>);\r\n            }\r\n        }\r\n        if(this.annotationType==\"faceDetection\" && facedata[0]){\r\n            for (var i = 0; i < facedata.length; i++) {\r\n                elementsToRender.push(<li className=\"annotation\">\r\n                    <div class=\"container\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm\">\r\n                          <img className=\"img-shot-face\" src={ph_face} alt=\"face\" />\r\n                        </div>\r\n                        <div class=\"col-sm\">\r\n                          Face Id: {i}<br/>\r\n                          Frame Id: {facedata[i][\"frame_idx\"]}<br/>\r\n                          Face Area: {facedata[i][\"bbox_area\"].toFixed(6)}<br/>\r\n                          Person: Mr. TIB<br/>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </li>);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"text-color\">\r\n                <ul className=\"annotation\">\r\n                  {elementsToRender}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AnnotationList;","/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/metadata.jsx",[],"/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/shotBoundaryViewer.jsx",["81"],"/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/annotationForm.jsx",[],"/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/mediaPlayer.jsx",[],"/home/ghauri/Documents/any_desk_share/tibava/frontend/src/components/popup.jsx",["82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":8,"nodeType":"90","messageId":"91","endLine":1,"endColumn":12},{"ruleId":"88","severity":1,"message":"92","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":158,"column":13,"nodeType":"90","messageId":"95","endLine":158,"endColumn":17},{"ruleId":"88","severity":1,"message":"96","line":161,"column":13,"nodeType":"90","messageId":"91","endLine":161,"endColumn":21},{"ruleId":"93","severity":1,"message":"97","line":170,"column":26,"nodeType":"90","messageId":"95","endLine":170,"endColumn":27},{"ruleId":"93","severity":1,"message":"94","line":184,"column":13,"nodeType":"90","messageId":"95","endLine":184,"endColumn":17},{"ruleId":"88","severity":1,"message":"98","line":187,"column":13,"nodeType":"90","messageId":"91","endLine":187,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":306,"column":41,"nodeType":"101","endLine":306,"endColumn":211},{"ruleId":"99","severity":1,"message":"100","line":307,"column":41,"nodeType":"101","endLine":307,"endColumn":148},{"ruleId":"88","severity":1,"message":"102","line":35,"column":17,"nodeType":"90","messageId":"91","endLine":35,"endColumn":23},{"ruleId":"88","severity":1,"message":"103","line":14,"column":19,"nodeType":"90","messageId":"91","endLine":14,"endColumn":30},{"ruleId":"88","severity":1,"message":"104","line":17,"column":10,"nodeType":"90","messageId":"91","endLine":17,"endColumn":22},{"ruleId":"88","severity":1,"message":"105","line":17,"column":33,"nodeType":"90","messageId":"91","endLine":17,"endColumn":47},{"ruleId":"88","severity":1,"message":"106","line":21,"column":9,"nodeType":"90","messageId":"91","endLine":21,"endColumn":26},{"ruleId":"88","severity":1,"message":"107","line":27,"column":9,"nodeType":"90","messageId":"91","endLine":27,"endColumn":26},{"ruleId":"88","severity":1,"message":"108","line":39,"column":12,"nodeType":"90","messageId":"91","endLine":39,"endColumn":26},{"ruleId":"88","severity":1,"message":"109","line":47,"column":12,"nodeType":"90","messageId":"91","endLine":47,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":24,"column":31,"nodeType":"112","messageId":"113","endLine":24,"endColumn":33},{"ruleId":"110","severity":1,"message":"111","line":54,"column":31,"nodeType":"112","messageId":"113","endLine":54,"endColumn":33},{"ruleId":"93","severity":1,"message":"114","line":55,"column":22,"nodeType":"90","messageId":"95","endLine":55,"endColumn":23},{"ruleId":"88","severity":1,"message":"115","line":46,"column":21,"nodeType":"90","messageId":"91","endLine":46,"endColumn":28},{"ruleId":"99","severity":1,"message":"100","line":35,"column":25,"nodeType":"101","endLine":35,"endColumn":89},{"ruleId":"116","severity":1,"message":"117","line":35,"column":33,"nodeType":"118","messageId":"119","endLine":35,"endColumn":54},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'RangeSlider' is defined but never used.","no-redeclare","'data' is already defined.","redeclared","'fps_half' is assigned a value but never used.","'j' is already defined.","'halFpsJump' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'frmIdx' is assigned a value but never used.","'CSVDownload' is defined but never used.","'containerRef' is assigned a value but never used.","'containerWidth' is assigned a value but never used.","'handleDownloadPNG' is assigned a value but never used.","'handleDownloadCSV' is assigned a value but never used.","'getRandomColor' is defined but never used.","'getMultiLineForGraph' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'i' is already defined.","'shot_id' is assigned a value but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]